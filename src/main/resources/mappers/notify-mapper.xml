<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.onedaythink.notify.mapper.NotifyMapper">

    <select id="selectNotifications" resultType="NotifyDetail">
        select *
        from notification_tb
        where read_yn = 'n'
        and user_no = #{userNo}
        order by create_at desc
    </select>

    <insert id="insertNotify" parameterType="NotifyDetail">
        insert into `notification_tb` ( user_no, message, create_at )
        values ( #{userNo}, #{message}, #{createAt})
    </insert>

    <update id="editNotify" parameterType="Notify">
        update `notification_tb`
        set read_yn = 'y'
        where noti_no = #{notiNo}
    </update>

    <select id="selectBeforeNotifyInfo" parameterType="NotifyDetail" resultType="NotifyDetail">
        select *
        <if test="userOpiNo != 0">
        from user_opinion_tb as uo
        join user_tb as u on u.user_no = uo.user_no
        <if test="type == 'invite'">
        join chat_room_tb as cr on uo.user_opi_no = cr.to_user_opi_no
        </if>
        where uo.user_opi_no = #{userOpiNo}
        </if>
        <if test="type == 'invite'">
          and cr.is_close = 'n'</if>
        limit 1
    </select>

    <select id="selectBeforeNotifyInfoMessage" parameterType="NotifyDetail" resultType="NotifyDetail">
        select uo.user_no as user_no, u.nickname as to_nickname, cr.from_user_no as from_user_no, u2.nickname as from_nickname, cr.chat_room_no
        from user_opinion_tb as uo
                 join user_tb as u on u.user_no = uo.user_no
                 join chat_room_tb as cr on uo.user_opi_no = cr.to_user_opi_no
                 join user_tb as u2 on u2.user_no = cr.from_user_no
        where cr.chat_room_no = #{chatRoomNo}
          and cr.is_close = 'n'
        limit 1;
    </select>
</mapper>

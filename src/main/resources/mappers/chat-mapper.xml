<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.onedaythink.chat.mapper.ChatMapper">

    <insert id="insertChatRoom" parameterType="ChatRoom">
        insert into chat_room_tb (to_user_opi_no, from_user_no, create_at)
        values (#{toUserOpiNo}, #{fromUserNo}, #{createAt})
    </insert>

    <select id="selectLastMessage" parameterType="ChatRoom" resultType="ChatMessage">
        SELECT chat_send_user_no, chat_msg_content, chat_create_at, ut.user_origin_img, ut.user_img_path
        FROM chat_message_tb as cmt
        join user_tb as ut on cmt.chat_send_user_no = ut.user_no
        WHERE chat_room_no = #{chatRoomNo}
        ORDER BY chat_create_at DESC
        LIMIT 1
    </select>

    <update id="updateChatRoomClosed" parameterType="ChatRoom">
        UPDATE chat_room_tb
        SET is_close='y'
        WHERE chat_room_no = #{chatRoomNo}
    </update>

    <!-- 채팅룸 조회 -->
    <select id="selectChatRooms" parameterType="ChatRoomDetail" resultType="ChatRoomDetail">
        select cr.chat_room_no, to_u.user_no as to_user_no, to_u.nickname as to_nickname, to_u.user_origin_img as to_userOriginPath, to_u.user_img_path as to_userImgPath, from_u.user_origin_img as from_userOriginPath, from_u.user_img_path as from_userImgPath,  from_u.user_no as from_user_no, from_u.nickname as from_nickname,
        cr.create_at, cr.is_close, cm.chat_msg_content as last_message, cm.nickname as send_nickname
        from chat_room_tb as cr
        join user_opinion_tb as uo
        on uo.user_opi_no = cr.to_user_opi_no
        join user_tb as to_u
        on to_u.user_no = uo.user_no
        join user_tb as from_u
        on from_u.user_no = cr.from_user_no
        left join (SELECT t1.*, t3.nickname
        FROM chat_message_tb as t1
        join user_tb as t3
        on t1.chat_send_user_no = t3.user_no
        WHERE t1.chat_msg_no IN
        (select max(t2.chat_msg_no) from chat_message_tb as t2 group by t2.chat_room_no)) as cm
        on cr.chat_room_no = cm.chat_room_no
        where (uo.user_no = #{findUserNo}
        or cr.from_user_no = #{findUserNo})
        and is_close = 'n'
        order by cr.create_at desc
    </select>

    <!-- 채팅방 생성 시 요청자-의견작성자 두 명으로 생성된 채팅방이 있는지 확인 -->
    <select id="selectChatRoomCountByUserNo" parameterType="ChatRoom" resultType="int">
        select
        -- 나는 채팅방에 초대된 사람이고, 외견번호의 외래키인 유저번호를 가진 유저가 사실 이전에 나에게 초대를 보낸 적이 있을 때
            (SELECT COUNT(*)
             FROM chat_room_tb cr
                      join user_opinion_tb AS t1 on cr.`to_user_opi_no` = t1.`user_opi_no`
                      JOIN user_tb AS t2 ON t1.user_no = t2.user_no
             WHERE t1.user_no = #{fromUserNo}
               and cr.`from_user_no`= (select t3.user_no
                                         from user_tb as t3
                                         join user_opinion_tb as t4 on t3.user_no = t4.user_no
                                         where t4.`user_opi_no` = #{toUserOpiNo}
             )
               and cr.is_close = 'n'
            )
                +
            -- 내가 채팅의 초대자이고, 의견번호를 기준으로 채팅방을 초대할 때
            (SELECT COUNT(*)
            FROM chat_room_tb as cr
                     join user_opinion_tb as uo on cr.`to_user_opi_no` = uo.`user_opi_no`
            WHERE uo.user_no = (select t1.user_no
                                from user_tb as t1
                                         join user_opinion_tb as t2 on t1.user_no = t2.user_no
                                where t2.user_opi_no = #{toUserOpiNo})
              and cr.from_user_no = #{fromUserNo}
              AND cr.is_close = 'n') as `count`
    </select>

    <select id="selectChatMessageDetails" parameterType="ChatRoomDetail" resultType="ChatMessageDetail">
        select cm.*, u.nickname as send_nickname, u.user_img_path
        from chat_message_tb cm
        join user_tb u on cm.chat_send_user_no = u.user_no
        where chat_room_no = #{chatRoomNo}
        order by 1
    </select>

    <insert id="insertChatMessage" parameterType="ChatMessageDetail">
        insert into chat_message_tb (
        `chat_room_no`,
        `chat_send_user_no`,
        `chat_msg_content`,
        `chat_create_at`)
        values (#{chatRoomNo},
        #{chatSendUserNo},
        #{chatMsgContent},
        #{chatCreateAt})
    </insert>

    <!-- 전체 채팅방 조회(admin용: status, close 무관)-->
    <select id="selectListChatRoomsAdmin" parameterType="ChatRoom" resultType="ChatRoom">
        select *
        from chat_room_tb
    </select>
</mapper>